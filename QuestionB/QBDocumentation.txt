This is a documentation for the The software libraryMethods:isVariableANumber(variable): Takes string parameter (variable). Returns a boolean value (true if variable can be converted to an integer, false if it can not)versionFormatConverter(versionString): Takes string parameter (versionString). Converts Input (versionString) to a standard format if necessary (X.X.X.X). Returns formatted Input as a stringdoesVersionMatch(versionString,pattern): Takes string parameter (versionString) and regular expression (pattern). Returns a boolean value (true if string parameter matches the regular expression, false if it does not)versionComparator(version1, version2): Takes string parameters (version1 and version2). Compares both version inputs. Returns:- 0 if version1 < version2- 1 if version1 = version2- 2 if version1 > version2- None if version(s) formats invalid (no Comparison has been done) Required Python Packages:re (for regular expressions)##Some explanations##This library has been implemented based on explanation provided at the following link:https://en.wikipedia.org/wiki/Software_versioningThe Version Comparator is implement for standard formats : X or X.X or X.X.X or X.X.X.X and Version formats designating development stage (alpha, beta, release candidate, final release) with the assumption that it is used in the third positionMainQB's purpose is for testing the cases covered. Note that the program stops when it encounters the first invalid version input. It does not mention the 2 version inputs when they are both invalid.the method versionFormatConverter(...) could have been used in MainQB.py to fix that.